#!/usr/bin/env ruby
# http://qiita.com/lnznt/items/d4798cb42d463cf1acf1

require 'open-uri'
require 'optparse'
require 'yaml'
require 'json'

fi = fo = -> s { s }
yj_mode = -> { fi = YAML.method:load ; fo = JSON.method:pretty_generate }
yJ_mode = -> { fi = YAML.method:load ; fo = JSON.method:generate }
jy_mode = -> { fi = JSON.method:load ; fo = YAML.method:dump }

case File.basename $0, '.*'
  when 'yj' ; yj_mode.()
  when 'jy' ; jy_mode.()
end

OptionParser.new.instance_eval do
  on('--yj', 'YAML -> JSON モード       ')  { yj_mode.() }
  on('--yJ', 'YAML -> JSON モード (非pp)')  { yJ_mode.() }
  on('--jy', 'JSON -> YAML モード       ')  { jy_mode.() }
  on('-n'  , '無変換 モード             ')  { fi = fo = -> s { s } }
  parse!
end

fp = -> s { print fo.(fi.(s)) }

if ARGV.empty?
  fp.($<.read)
else
  ARGV.each {|fname| open(fname) {|f| fp.(f.read) }}
end
