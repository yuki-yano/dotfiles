#!/usr/bin/env sh

# ghq project selector with optional tmux integration

set -eu

if ! command -v fzf >/dev/null 2>&1; then
  printf '%s\n' "ghq-project-selector: fzf not found" >&2
  exit 1
fi

tmux_available=0
if command -v tmux >/dev/null 2>&1; then
  tmux_available=1
fi

has_bat=0
if command -v bat >/dev/null 2>&1; then
  has_bat=1
fi

if [ -n "$TMUX" ] && [ "$tmux_available" -eq 1 ] && command -v fzf-tmux >/dev/null 2>&1; then
  set -- fzf-tmux -p 70%,70%
else
  set -- fzf
fi

if [ "$has_bat" -eq 1 ]; then
  preview_cmd='bat $(eval echo {})/README.md'
else
  preview_cmd='cat $(eval echo {})/README.md'
fi

dir=$(ghq list -p | sed -e "s|${HOME}|~|" | "$@" --prompt="Project> " --preview="$preview_cmd" --bind ctrl-d:preview-page-down,ctrl-u:preview-page-up --no-separator) || exit 0

if [ -z "$dir" ]; then
  exit 0
fi

project_dir=$dir
case "$project_dir" in
  "~"*)
    project_dir=$HOME${project_dir#\~}
    ;;
esac

if [ -n "$TMUX" ] && [ "$tmux_available" -eq 1 ]; then
  repository=${project_dir##*/}
  session=$(printf '%s' "$repository" | tr '.' '-')
  current_session=$(tmux list-sessions 2>/dev/null | grep 'attached' | cut -d":" -f1)

  case "$current_session" in
    ''|*[!0-9]*)
      if ! tmux list-sessions 2>/dev/null | cut -d":" -f1 | grep -F -x -q "$session"; then
        tmux new-session -d -c "$project_dir" -s "$session"
      fi
      tmux switch-client -t "$session"
      ;;
    *)
      cd "$project_dir" || exit 1
      tmux rename-session "$session"
      ;;
  esac
else
  printf '%s\n' "$dir"
fi
