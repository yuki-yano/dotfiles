# Default
unbind C-b
set -g prefix C-t
bind -T prefix C-t send-prefix
bind -T prefix t   send-keys C-t

set  -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -sg escape-time 0
set  -g history-limit 50000
set  -g status-interval 5

set  -g base-index 1
set  -g pane-base-index 1
set  -g status-position top
setw -g mode-keys vi
set  -g mouse on
set  -g default-command "reattach-to-user-namespace -l $SHELL"

# Reload
bind R source-file ~/.tmux.conf \; display "Reloaded!"

# Plugin
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Binding

## Move Pane
bind -T prefix h select-pane -L
bind -T prefix j select-pane -D
bind -T prefix k select-pane -U
bind -T prefix l select-pane -R

## Move Window
bind -T prefix c   new-window
bind -n M-c        new-window -c "#{pane_current_path}"
bind -n M-Enter    new-window -c "#{pane_current_path}"
bind -T prefix n   next-window
bind -T prefix p   previous-window
bind -T prefix C-t last-window
bind -n M-j        next-window
bind -n M-k        previous-window
bind -n M-1        select-window -t 1
bind -n M-2        select-window -t 2
bind -n M-3        select-window -t 3
bind -n M-4        select-window -t 4
bind -n M-5        select-window -t 5
bind -n M-6        select-window -t 6
bind -n M-7        select-window -t 7
bind -n M-8        select-window -t 8
bind -n M-9        select-window -t 9

## Split Window
bind -T prefix v split-window -h  -c "#{pane_current_path}"
bind -T prefix s split-window -v  -c "#{pane_current_path}"
bind -T prefix V split-window -fh -c "#{pane_current_path}"
bind -T prefix S split-window -fv -c "#{pane_current_path}"
bind -T prefix - split-window -v  -c "#{pane_current_path}"
bind -T prefix | split-window -h  -c "#{pane_current_path}"
bind -T prefix _ split-window -fv -c "#{pane_current_path}"
bind -T prefix \ split-window -fh -c "#{pane_current_path}"
bind -n M-v      split-window -h  -c "#{pane_current_path}"
bind -n M-s      split-window -v  -c "#{pane_current_path}"
bind -n M-V      split-window -fh -c "#{pane_current_path}"
bind -n M-S      split-window -fv -c "#{pane_current_path}"
bind -n M--      split-window -v  -c "#{pane_current_path}"
bind -n M-|      split-window -h  -c "#{pane_current_path}"
bind -n M-_      split-window -fv -c "#{pane_current_path}"
bind -n M-\      split-window -fh -c "#{pane_current_path}"

## Resize Pane
bind -r -T prefix H resize-pane -L 5
bind -r -T prefix L resize-pane -R 5
bind -r -T prefix J resize-pane -D 5
bind -r -T prefix K resize-pane -U 5
bind -n M-H         resize-pane -L 5
bind -n M-L         resize-pane -R 5
bind -n M-J         resize-pane -D 5
bind -n M-K         resize-pane -U 5

## Layout
bind -n M-Space  next-layout

## Full Screen
bind -n M-z resize-pane -Z

## Kill pane && window
bind -n M-x kill-pane
bind -n M-X kill-window

## Clear History
bind -T prefix C-c clear-history

## Join Pane
bind -n M-'!' join-pane -t :1
bind -n M-'"' join-pane -t :2
bind -n M-'#' join-pane -t :3
bind -n M-'$' join-pane -t :4
bind -n M-'%' join-pane -t :5
bind -n M-'&' join-pane -t :6
bind -n M-"'" join-pane -t :7
bind -n M-'(' join-pane -t :8
bind -n M-')' join-pane -t :9

## Move Session
bind -n M-C new-session
bind -n M-l switch-client -n
bind -n M-h switch-client -p

## Rename Session
bind -n M-r command-prompt -p "(rename-window '#S')" "rename-window '%%'"
bind -n M-R command-prompt -p "(rename-session '#S')" "rename-session '%%'"

## Move Selection
bind -T prefix a   choose-tree
bind -T prefix e   choose-session
bind -T prefix w   choose-tree -w
bind -T prefix C-a choose-tree
bind -T prefix C-e choose-session
bind -T prefix C-w choose-tree -w
bind -n M-a        choose-tree
bind -n M-e        choose-session
bind -n M-w        choose-tree -w

## Copy Mode
bind -T prefix C-Space copy-mode
bind -n M-'['          copy-mode

bind -T copy-mode-vi C-a    send-keys -X start-of-line
bind -T copy-mode-vi C-e    send-keys -X end-of-line
bind -T copy-mode-vi v      send-keys -X begin-selection
bind -T copy-mode-vi V      send-keys -X select-line
bind -T copy-mode-vi C-v    send-keys -X rectangle-toggle
bind -T copy-mode-vi y      send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi Enter  send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi Escape send-keys -X cancel

bind -T prefix ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
bind -n M-']'    run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Vim Tmux Navigator
is_zsh="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'Ss\\+\\s*-zsh$'"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*fzf$'"
is_peco="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*peco$'"
bind -n C-h run "($is_zsh && tmux send-keys C-h) || ($is_vim && tmux send-keys C-h) || ($is_fzf && tmux send-keys C-h) || ($is_peco && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "($is_zsh && tmux send-keys C-j) || ($is_vim && tmux send-keys C-j) || ($is_fzf && tmux send-keys C-j) || ($is_peco && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "($is_zsh && tmux send-keys C-k) || ($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k) || ($is_peco && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-\ select-pane -l
bind -T prefix       C-l send-keys C-l

# Status Line
set -g status-fg colour251
set -g status-bg colour237

set -g pane-border-fg colour8
set -g pane-active-border-fg colour15

set -g status-left-length  150
set -g status-right-length 150
set -g status-left "#[fg=colour108,bg=colour237,bold] [#S:#I:#P] "

setw -g window-status-current-format "#[fg=colour173,bg=colour237,bold,nounderscore]#I #W "
setw -g window-status-format "#[fg=colour68,bg=colour237]#I #W "

set -g status-right '#(tmux-prefix-highlight) #(cpu) | #(memory) | #(swap) | #(loadaverage) / #(wifi) #(battery) '
set -g status-justify left

# Message line
set -g message-fg white
set -g message-bg colour235
set -g message-attr bright

if "test -e ~/.tmux.conf.local" "source ~/.tmux.conf.local"

run '~/.tmux/plugins/tpm/tpm'
