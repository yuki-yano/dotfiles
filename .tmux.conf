# Default
set -g prefix C-y
bind -T prefix C-y send-keys C-y

set -g  default-terminal "tmux-256color"
set -as terminal-features 'xterm-256color:RGB'
set -ag terminal-overrides ",*256col*:Tc"
set -sg escape-time 0
set  -g history-limit 10000
set  -g status-interval 10

set  -g base-index 1
set  -g pane-base-index 1
set  -g status-position top
setw -g mode-keys vi
set  -g mouse on
set  -g default-command "reattach-to-user-namespace -l $SHELL"
set  -g focus-events on
set  -g extended-keys on
set  -g allow-passthrough on

# Reload
bind R source-file ~/.tmux.conf \; display "Reloaded!"

# Binding

## Move Pane
# Standard pane movement (fallback)
bind -T prefix h select-pane -L
bind -T prefix j select-pane -D
bind -T prefix k select-pane -U
bind -T prefix l select-pane -R

## Move Window
bind -T prefix c   new-window
bind -n M-c        new-window -c "#{pane_current_path}"
bind -T prefix n   next-window
bind -T prefix p   previous-window
bind -n M-j        next-window
bind -n M-k        previous-window
bind -n M-z        resize-pane -Z

## Split Window
bind -T prefix v split-window -h  -c "#{pane_current_path}"
bind -T prefix s split-window -v  -c "#{pane_current_path}"
bind -n M-v      split-window -h  -c "#{pane_current_path}"
bind -n M-s      split-window -v  -c "#{pane_current_path}"
bind -T prefix V split-window -fh -c "#{pane_current_path}"
bind -T prefix S split-window -fv -c "#{pane_current_path}"
bind -T prefix 3 split-window -h  -c "#{pane_current_path}" -l 66%
bind -T prefix 4 split-window -h  -c "#{pane_current_path}" -l 75%

## Resize Pane
bind -r -T prefix H resize-pane -L 5
bind -r -T prefix L resize-pane -R 5
bind -r -T prefix J resize-pane -D 5
bind -r -T prefix K resize-pane -U 5
bind -n M-Left  resize-pane -L 2
bind -n M-Right resize-pane -R 2
bind -n M-Down  resize-pane -D 2
bind -n M-Up    resize-pane -U 2

## Swap Panes
# Toggle mark/swap functionality
bind-key -T prefix m run-shell 'tmux-swap-pane'
bind-key -n M-m      run-shell 'tmux-swap-pane'

## Clear History
bind -T prefix C-c clear-history

## Move Session
bind -n M-C new-session -c '~/'
bind -n M-l switch-client -n
bind -n M-h switch-client -p
set-hook -g client-session-changed 'run-shell "tmux refresh-client -S"'

## Detach
bind -n M-d detach

## Rename Window & Session
bind -n M-R command-prompt -p "(rename-session '#S')" "rename-session '%%'"

## Move Selection
bind -T prefix a   choose-tree
bind -T prefix e   choose-session
bind -T prefix w   choose-tree -w
bind -T prefix C-a choose-tree
bind -T prefix C-e choose-session
bind -T prefix C-w choose-tree -w

## Copy Mode
bind -n M-'[' copy-mode

bind -T copy-mode-vi C-a    send-keys -X start-of-line
bind -T copy-mode-vi C-e    send-keys -X end-of-line
bind -T copy-mode-vi v      send-keys -X begin-selection
bind -T copy-mode-vi V      send-keys -X select-line
bind -T copy-mode-vi C-v    send-keys -X rectangle-toggle
bind -T copy-mode-vi y      send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Enter  send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Escape send-keys -X cancel

bind -n M-']' run "pbpaste | tr -d '\n' | tmux load-buffer - && tmux paste-buffer"
bind -n M-'}' run "pbpaste | tmux load-buffer - && tmux paste-buffer"
bind -T prefix ] run "pbpaste | tr -d '\n' | tmux load-buffer - && tmux paste-buffer"
bind -T prefix '}' run "pbpaste | tmux load-buffer - && tmux paste-buffer"

# tmux.nvim integration
is_zsh="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'Ss\\+\\s*-zsh$'"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE 'S\\+\\s*fzf$'"
is_claude="ps -o comm= -t '#{pane_tty}' | grep -qE '(claude|node.*claude)'"

bind -n C-h if-shell "$is_vim" 'send-keys C-h' {
  if-shell "$is_claude" 'run-shell "tmux-smart-switch-pane left"' {
    if-shell "$is_zsh || $is_fzf" 'send-keys C-h' { 
      if -F '#{pane_at_left}' '' 'run-shell "tmux-smart-switch-pane left"' 
    }
  }
}

bind -n C-j if-shell "$is_vim" 'send-keys C-j' {
  if-shell "$is_claude" 'run-shell "tmux-smart-switch-pane down"' {
    if-shell "$is_zsh || $is_fzf" 'send-keys C-j' { 
      if -F '#{pane_at_bottom}' '' 'run-shell "tmux-smart-switch-pane down"' 
    }
  }
}

bind -n C-k if-shell "$is_vim" 'send-keys C-k' {
  if-shell "$is_claude" 'run-shell "tmux-smart-switch-pane up"' {
    if-shell "$is_zsh || $is_fzf" 'send-keys C-k' { 
      if -F '#{pane_at_top}' '' 'run-shell "tmux-smart-switch-pane up"' 
    }
  }
}

bind -n C-l if-shell "$is_vim" 'send-keys C-l' {
  if-shell "$is_claude" 'run-shell "tmux-smart-switch-pane right"' {
    if-shell "$is_fzf" 'send-keys C-l' 'run-shell "tmux-smart-switch-pane right"'
  }
}

bind -n M-i run-shell 'editprompt --resume --target-pane #{pane_id} || tmux split-window -v -l 30 -c "#{pane_current_path}" "editprompt --target-pane #{pane_id}"'
bind -n M-f run-shell 'tmux-session-manager'
bind -n M-t run-shell 'ghq-project-selector'
bind -n M-w run-shell 'tmux-session-manager --kill'
bind -n M-u run-shell 'tmux-toggle-transparency'

bind -T copy-mode-vi C-h if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -T copy-mode-vi C-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -T copy-mode-vi C-k if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -T copy-mode-vi C-l if -F '#{pane_at_right}'  '' 'select-pane -R'

bind -T prefix C-l send-keys C-l
bind -n C-s        if-shell "$is_zsh" 'send-keys C-l' 'send-keys C-s'

# Status Line
set -g status-fg "#c6c6c6"
set -g status-bg "#3a3a3a"

set -g pane-border-style fg="#404040"
set -g pane-active-border-style fg="#585B70"

# Window style (background colors)
set -gq @theme_mode "transparent"
if -F '#{==:#{@theme_mode},transparent}' \
  "set -g window-style 'bg=default'; set -g window-active-style 'bg=default'" \
  "set -g window-style 'bg=#232333'; set -g window-active-style 'bg=#181825'"

set -g pane-border-lines heavy

set -g status-left-length  150
set -g status-right-length 150
set -g status-left "#[fg=#A5A1F2,bg=#352F63] #(tmux-statusline-sessions) #[default] "

setw -g window-status-current-format "#[fg=#89B4FA,bg=#3a3a3a,nobold]#[fg=#1C1C1C,bg=#89B4FA,bold]#I #W#[fg=#89B4FA,bg=#3a3a3a,nobold]#[default]"
setw -g window-status-format " #[fg=#7F849C,bg=#3a3a3a,nobold]#I #W #[default]"

set -g status-right '#{?#{==:#{QUICK_IME},1},,#[fg=#303030,bg=#3a3a3a]#[fg=white,bg=#303030] #(tmux-status-ccusage) #[fg=#45475A,bg=#303030]#[fg=white,bg=black] #(wifi) #[fg=white,bg=black]#(battery) }'
set -g status-justify left

set-option -g pane-border-status bottom
set-option -g pane-border-format "#{?pane_active,#[fg=#8295D1]#[bg=#1C1C1C]#[nobold]#[fg=#1E1E2E]#[bg=#8295D1]#[nobold] #I.#P #[fg=#1E1E2E] #(tmux-pwd #{pane_current_path})  #{pane_current_command} #[fg=#8295D1]#[bg=#1C1C1C]#[nobold]#[default],#[fg=#373A56]#[bg=#1C1C1C]#[nobold]#[fg=#BDC4E3]#[bg=#373A56]#[nobold] #I.#P #[fg=#9696CE] #(tmux-pwd #{pane_current_path})  #{pane_current_command} #[fg=#373A56]#[bg=#1C1C1C]#[nobold]#[default]}"

if "test -e ~/.tmux.conf.local" "source ~/.tmux.conf.local"
