<?xml version="1.0"?>
<root>
  <symbol_map type="KeyCode" name="[" value="0x1e" />
  <appdef>
    <appname>PyCharm</appname>
    <prefix>com.jetbrains.pycharm</prefix>
  </appdef>
  <list>
    <item>
      <name>LeaveInsMode with EISUU</name>
      <identifier>private.esc_with_eisuu</identifier>
      <autogen>--KeyToKey--
        KeyCode::ESCAPE,
        KeyCode::ESCAPE, KeyCode::JIS_EISUU
      </autogen>
      <autogen>--KeyToKey--
        KeyCode::[, VK_CONTROL,
        KeyCode::[, VK_CONTROL, KeyCode::JIS_EISUU
      </autogen>
    </item>
    <item>
      <name>Option+, to Command+,(iterm2)</name>
      <identifier>private.iterm2_command_,.option_,</identifier>
      <only>TERMINAL</only>
      <autogen>--KeyToKey--
        KeyCode::COMMA, ModifierFlag::COMMAND_R,
        KeyCode::COMMA, ModifierFlag::OPTION_R
      </autogen>
    </item>
    <item>
      <name>Option+Tab to Command+Tab(iterm2)</name>
      <identifier>private.iterm2_command_tab.option_tab</identifier>
      <only>TERMINAL</only>
      <autogen>
        --KeyToKey--
        KeyCode::TAB, ModifierFlag::COMMAND_R,
        KeyCode::TAB, ModifierFlag::OPTION_R
      </autogen>
    </item>
    <item>
      <name>Option+Space to Command+Space(iterm2)</name>
      <identifier>private.iterm2_command_space.option_space</identifier>
      <only>TERMINAL</only>
      <autogen>
        --KeyToKey--
        KeyCode::SPACE, ModifierFlag::COMMAND_R,
        KeyCode::SPACE, ModifierFlag::OPTION_R
      </autogen>
    </item>
    <item>
      <name>Control+P/N to Up/Down(IntelliJ)</name>
      <identifier>private.intellij_up_down</identifier>
      <only>IntelliJ</only>
      <autogen>
        --KeyToKey--
        KeyCode::N, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        --KeyToKey--
        KeyCode::P, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_UP
      </autogen>
    </item>
    <item>
      <name>Control+F to RIGHT(Slack)</name>
      <identifier>private.slack_right.control_f</identifier>
      <only>Slack</only>
      <autogen>
        --KeyToKey--
        KeyCode::F, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_RIGHT
      </autogen>
    </item>
    <item>
      <name>Command+N=move next channel, Command+P=move previous channel, Ctrl+Cmd+A=move unread channel(Slack)</name>
      <identifier>private.slack_move_channel_with_cmdn_cmdp</identifier>
      <only>Slack</only>
      <autogen>
        __KeyToKey__
        KeyCode::N, ModifierFlag::COMMAND_R,
        KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::P, ModifierFlag::COMMAND_R,
        KeyCode::CURSOR_UP, ModifierFlag::OPTION_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::A, ModifierFlag::COMMAND_R, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L, ModifierFlag::SHIFT_L
      </autogen>
    </item>
    <item>
      <name>Control+PNBF to Up/Down/Left/Right(Chrome)</name>
      <identifier>private.chrome_pnbf</identifier>
      <only>GOOGLE_CHROME</only>
      <autogen>
        --KeyToKey--
        KeyCode::P, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        --KeyToKey--
        KeyCode::N, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        --KeyToKey--
        KeyCode::B, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        --KeyToKey--
        KeyCode::F, ModifierFlag::CONTROL_L,
        KeyCode::CURSOR_RIGHT
      </autogen>
    </item>
    <item>
      <name>Command+b to Ctrl+Option+b</name>
      <identifier>remap.command_b2ctrl_opt_b</identifier>
      <not>TERMINAL, IntelliJ, RubyMine, PyCharm</not>
      <autogen>
        __KeyToKey__
        KeyCode::B, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        KeyCode::B, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION
      </autogen>
    </item>
    <item>
      <name>Command+f to Ctrl+Option+f</name>
      <identifier>remap.command_f2ctrl_opt_f</identifier>
      <not>TERMINAL, IntelliJ, RubyMine, PyCharm</not>
      <autogen>
        __KeyToKey__
        KeyCode::F, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        KeyCode::F, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION
      </autogen>
    </item>
    <item>
      <name>Ctrl+w to Option+Delete</name>
      <identifier>remap.ctrl_w2opt_del</identifier>
      <not>TERMINAL</not>
      <autogen>
        __KeyToKey__
        KeyCode::W,      MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
        KeyCode::DELETE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION
      </autogen>
    </item>
    <item>
      <name>Control+H to Delete</name>
      <identifier>remap.ctrl_h2del</identifier>
      <only>IntelliJ, RubyMine, PyCharm</only>
      <autogen>
        --KeyToKey--
        KeyCode::H, ModifierFlag::CONTROL_L,
        KeyCode::DELETE
      </autogen>
    </item>
    <item>
      <name>Escape with EISUU</name>
      <identifier>private.vim_keybind_apps_esc_with_eisuu</identifier>
      <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::ESCAPE, KeyCode::JIS_EISUU</autogen>
      <autogen>__KeyToKey__ KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::BRACKET_LEFT, VK_CONTROL, KeyCode::JIS_EISUU</autogen>
    </item>
    <item>
      <name>Swap Command+Tab and Option+Tab</name>
      <identifier>private.use_witch</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::TAB, ModifierFlag::COMMAND_R,
        KeyCode::TAB, ModifierFlag::OPTION_R
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::TAB, ModifierFlag::OPTION_R,
        KeyCode::TAB, ModifierFlag::COMMAND_R
      </autogen>
    </item>
  </list>
</root>
