" Basic {{{

" GUIの設定
set gui=nonavigation
noremap v :set<Space>gui=nonavigation<CR>
noremap V :set<Space>gui=navigation<CR>
" 詳細表示を9行に
set verbose=9
" undo保持数
set! browser.sessionstore.max_tabs_undo=1000
" :tabopenの補完設定
set complete=lSt
" デフォルト検索エンジンの設定
set defsearch=g
" サジェストエンジンの設定
set suggestengines=g
" 履歴を保存
set history=100000
" リンクのURIをステータスラインに表示
set showstatuslinks=1
" ビープ音の無効化
set visualbell
hi Bell display:none
" キャレットを太くする
set! ui.caretWidth=8
" コマンドラインに入ったとき日本語入力を自動で無効に
style -name commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}
" リンクのURIをコマンドラインに表示
set showstatuslinks=2

" 検索を強制的に設定
set! accessibility.typeaheadfind=false
set! accessibility.typeaheadfind.casesensitive=2
set! findbar.highlightAll=false
set! findbar.entireword=false
set! findbar.modalHighlight=false

" To Enable map <Space>
js <<EOM
  window.addEventListener('keypress', function (event) {
    var code = event.charCode;
    if ((liberator.mode === modes.INSERT && modes.extended === modes.MENU)
    ||(liberator.mode == modes.NORMAL && code == 32)
    ||(liberator.mode == modes.COMMAND_LINE && code != 32)){
      let map = mappings.get(liberator.mode, events.toString(event));
      if (map) {
        event.preventDefault();
        event.stopPropagation();
        map.execute();
      }
    }
  }, false);
EOM

" My Customization
map <Space> <Leader>

" }}}

" bmarks {{{

bmark -title="Google" -tags=keyword -keyword=g https://www.google.co.jp/search?q=%s
bmark -title="niconico" -tags=keyword -keyword=nico http://www.nicovideo.jp/tag/%s
bmark -title="googlemap" -tags=keyword -keyword=map https://maps.google.co.jp/maps?q=%s
bmark -title="yahoo1" -tags=keyword -keyword=yahoo1 http://auctions.search.yahoo.co.jp/search?p=%s
bmark -title="twitter" -tags=keyword -keyword=t https://twitter.com/search?src=typd&q=%s
bmark -title="Qiita" -tags=keyword -keyword=qiita http://qiita.com/search?q=%s
bmark -title="Wikipedia" -tags=keyword -keyword=w https://ja.wikipedia.org/wiki/%s
bmark -title="twitter" -tags=keyword -keyword=t https://twitter.com/search?src=typd&q=%s

" }}}

" KeyBind {{{

" hとlでタブ移動
nnoremap h :tabprevious<CR>
nnoremap l :tabnext<CR>

" 移動量の設定
map j 5<C-e>
map k 5<C-y>

" コマンドライン
cmap <C-n> <Tab>
cmap <C-p> <S-Tab>
cmap <C-f> <Right>
cmap <C-b> <Left>
cmap <C-y> <S-Insert>

" Mac用 (Windowsは<A-*>)
cmap <M-n> <Down>
cmap <M-p> <Up>
noremap d :tabclose -select lastactive<CR>

" コマンドラインの補完
abbrev -j .title      '"' + buffer.title + '"'
abbrev -j .url        buffer.URL
abbrev -j .tu         abbreviations.get(modes.INSERT, '.title').text + ' - ' + buffer.URL

set hintchars=HJKLASDFGYUIOPQWERTNMZXCVB

" 貼り付け無効
noremap p <NOP>
noremap P <NOP>

" M-pを無効
noremap <M-p> <NOP>

" undo一覧から開く
nnoremap U :undo<Space>

" タブ順序変更
noremap K :tabmove! -1<CR>
noremap J :tabmove! +1<CR>

" nohlsearch[
" nnoremap <ESC> :nohlsearch<CR><ESC>
set nohlsearch

" はてブコメント
command hatebu javascript liberator.open('http://b.hatena.ne.jp/entry/' + buffer.URL, liberator.NEW_TAB)
noremap <leader>b :hatebu<CR>

" yankにcopyプラグインを使う
noremap y :copy url<CR>

"}}}

" Patch {{{
javascript <<EOM
// Vimperator のコマンドラインバグをもんやり修正するバッチ
liberator.registerObserver(
    'enter',
    function () {
        plugins.libly.$U.around(
            commandline,
            'input',
            function (next, [prompt, callback, extra]) {
                if (callback === finder.closure.onSubmit)
                    return next();
                if (extra && (extra.onChange === hints.closure._onInput))
                    return next();
                setTimeout(function () next(), 0);
            }
        );

        if (plugins.xHint) {
            [commands.get('xhint'), commands.get('xhintdo')].forEach(function (cmd) {
                plugins.libly.$U.around(
                    cmd,
                    'action',
                    function (next) setTimeout(function () next(), 0)
                );
            });
        }
    }
);
EOM
" }}}

" Plugin {{{

"============================
" open-chrome
"============================
noremap <leader>ch :chrome<CR>

"============================
" open-blisk
"============================
" noremap <leader>bl :blisk<CR>

"============================
" appendAnchor
"============================
let g:auto_append_anchor = 1

"============================
" ime_controller
"============================
let g:ex_ime_mode="inactive"
let g:textarea_ime_mode="auto"

"============================
" copy
"============================
javascript <<EOM
liberator.globalVariables.copy_templates = [
   { label: 'url', value: '%URL%' },
   { label: 'twitter', value: '"%TITLE%" - %URL%' },
   { label: 'markdown', value: '[%TITLE%](%URL%)' },
   { label: 'titleAndURL',    value: '%TITLE%\n%URL%' },
   { label: 'title',          value: '%TITLE%' },
   { label: 'anchor',         value: '<a href="%URL%">%TITLE%</a>' },
   { label: 'selanchor',      value: '<a href="%URL%" title="%TITLE%">%SEL%</a>' },
   { label: 'htmlblockquote', value: '<blockquote cite="%URL%" title="%TITLE%">%HTMLSEL%</blockquote>' }
];
EOM
noremap <leader>cpt :copy twitter<Return>
noremap <leader>cpm :copy markdown<Return>

"============================
" feedSomeKeys_3
"============================
command! -nargs=+ lazy autocmd VimperatorEnter .* <args>
lazy fmaps -u='www\.google\.co\.jp\/search.*' j k v p o : s ? + i
lazy fmaps -u='mail\.google\.com/mail' c / j k n p o e x r # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='mail\.google\.com/mail/.*/[0-9a-f]+$' c / j,n k,p n,j p,k o u e x s r a # [ ] ? gi gs gt gd ga gc
lazy fmaps -u='github\.com/.*' -events=vkeydown <C-b>

"============================
" ldr_cooperation
"============================
let g:ldrc_captureMappings = "['T', 'h', 'l', 'j', 'k', 'p', 'o', '?']"
let g:ldrc_hints = "true"
let g:ldrc_intelligence_bind = "true"
let g:ldrc_skip = "0.25"

"============================
" twittperator
"============================
noremap <leader>t :tw!<space>
noremap <leader>T :tw<space>
" let g:twittperator_use_chirp = 1
let g:twittperator_use_ssl_connection_for_api_ep = 1
" let g:twittperator_track_words = ""
" map s :js toggleSidebar('viewTwitterSidebar')<Return>

"============================
" toggleTreeTab
"============================
let g:treetabwidth=120
noremap a :toggletreetab<Return>

"============================
" multi_requester
"============================
noremap <leader>a :mr alc<space>

"============================
" jquery_loader
"============================
let g:jquery_filepath = "~/.vimperator/scripts/jquery-2.0.3.min.js"

"============================
" stylish
"============================
noremap <leader>s :stylish turnall<CR>

" }}}

" Plugin JS {{{

javascript <<EOM
// stella
function addLocalMappings(buffer, maps) {
    maps.forEach(
        function (map) {
            let [cmd, action, extra] = map;
            let actionFunc = action;
            extra || (extra = {});

            if (typeof action == "string") {
                if (action.charAt(0) == ':')
                    actionFunc = extra.open ? function () commandline.open("", action, modes.EX)
                    : function () liberator.execute(action);
                else
                    actionFunc = function () events.feedkeys(action, extra.noremap, true);
            }
            extra.matchingUrls = buffer;
            mappings.addUserMap(
                [modes.NORMAL],
                [cmd],
                "Local mapping for " + buffer,
                actionFunc,
                extra
            );
        }
    );
}

addLocalMappings(
        /^(http:\/\/(es|www).nicovideo.jp\/watch|http:\/\/(jp|www)\.youtube\.com\/watch|http:\/\/(www\.)?vimeo\.com\/(channels\/(hd)?#)?\d+)/,
    [
        ['<C-g>', ':pageinfo S',      ],
        ['p',     ':stplay',          ],
        ['m',     ':stmute',          ],
        ['c',     ':stcomment',       ],
        ['zz',    ':stlarge',         ],
        ['r',     ':strepeat',        ],
        ['+',     ':stvolume! 10',    ],
        ['-',     ':stvolume! -10',   ],
        ['h',     ':stseek! -10',     ],
        ['l',     ':stseek! 10',      ],
        ['k',     ':stvolume! 10',    ],
        ['j',     ':stvolume! -10',   ],
        ['s',     ':stseek ',         {open: true}],
        ['S',     ':stseek! ',        {open: true}],
        ['v',     ':stvolume ',       {open: true}],
        ['V',     ':stvolume! ',      {open: true}],
        ['o',     ':strelations ',    {open: true}],
        ['O',     ':strelations! ',   {open: true}],
    ]
);

// Fuzzy Tab Switch
liberator.modules.mappings.addUserMap(
    [liberator.modules.modes.NORMAL],
    ["<C-f>"],
    "Fuzzy Tab Switch",
    function(argument){
        tab_length = liberator.modules.tabs.count;
        if(isNaN(input = parseInt(argument))){
            switch(argument){
            case "a": input = 1; break;
            case "s": input = 2; break;
            case "d": input = 3; break;
            case "f": input = 4; break;
            case "g": input = 5; break;
            case "h": input = 6; break;
            case "j": input = 7; break;
            case "k": input = 8; break;
            case "l": input = 9; break;
            case ";": input = 0; break;
                defalut:
                liberator.echoerr("Invalid input.");
                return;
            }
        }

        if(input == 0) input = 10;
        input == 1 ? fuzzy_tab_index = 1 : fuzzy_tab_index = Math.round(tab_length * input / 10);
        liberator.modules.tabs.select(fuzzy_tab_index -1);
    },
    {
        arg: true
        //flags: liberator.modules.Mappings.flags.ARGUMENT
    }
);

// double-meow-C-a.js
// mappings.addUserMap(
//     [modes.COMMAND_LINE],
//     ['<C-a>'],
//     'Go to head.',
//     function () {
//         let e = Editor.getEditor();
//         let m = e.value.match(/^\s*\S+\s/);
//
//         if (!m) {
//             editor.executeCommand("cmd_beginLine", 1);
//             return;
//         }
//
//         if (e.selectionStart <= m[0].length) {
//             editor.executeCommand("cmd_beginLine", 1);
//             return;
//         }
//
//         editor.executeCommand("cmd_beginLine", 1);
//         editor.executeCommand("cmd_wordNext", 1);
//         editor.executeCommand("cmd_charNext", 1);
//     },
//     {}
// );

mappings.addUserMap(
    [modes.COMMAND_LINE],
    ['<M-b>'],
    'word previous',
    function () {
        editor.executeCommand("cmd_wordPrevious", 1);
    },
    {}
);

mappings.addUserMap(
    [modes.COMMAND_LINE],
    ['<M-f>'],
    'word next',
    function () {
        editor.executeCommand("cmd_wordNext", 1);
        editor.executeCommand("cmd_charNext", 1);
    },
    {}
);
EOM

js << EOM
    let evaluateXPath = util.evaluateXPath || buffer.evaluateXPath;
    mappings.addUserMap(
      [modes.NORMAL],
      [',p'],
      'Toggle AutoPagerize',
      function (motion, count, arg) {
        buffer.followLink(
          evaluateXPath('id("autopagerize_help")/div/a[@class="autopagerize_link"]').snapshotItem(0)
        );
      },
      {}
    );
EOM

" }}}

" After {{{
" テーマ設定
source ~/.vimperator/colors/sweets_dita.css

"============================
" buftabs
"============================
set showstatuslinks=1
javascript <<EOM
var adbar = document.getElementById('GiT-addon-bar');
var toggleButton = document.getElementById('GiT-addon-bar-toggle-button');
adbar.removeChild(toggleButton);
adbar.height=20;
EOM
loadplugins
set buftabs

" ツリー型タブがコマンドラインの上に重なるのを修正
style! -name=treestyletab chrome://* .tabbrowser-tab { z-index: 0 !important; }

" bug fix
" https://github.com/vimperator/vimperator-labs/issues/590#issuecomment-248833125
js services.services.autoCompleteSearch.class_="@mozilla.org/autocomplete/search;1?name=unifiedcomplete"

" }}}

" vim:set expandtab shiftwidth=2 softtabstop=2 tabstop=2 foldenable foldmethod=marker:
